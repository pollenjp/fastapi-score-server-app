openapi: "3.0.0"
info:
  version: 0.0.1
  title: Score API
servers:
  - url: http://localhost:3000
paths:
  /scores:
    get:
      summary: List all scores
      operationId: listScores
      tags:
        - scores
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: A paged array of scores
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scores"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a score
      operationId: createScores
      tags:
        - scores
      responses:
        "201":
          description: Null response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scores"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /scores/{scoreId}:
    get:
      summary: Info for a specific pet
      operationId: showScoreById
      tags:
        - scores
      parameters:
        - name: scoreId
          in: path
          required: true
          description: The id of the score to retrieve
          schema:
            type: integer
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Scores"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Score:
      required:
        - id
        - username
        - value
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        value:
          type: integer
          format: int32
    Scores:
      type: array
      items:
        $ref: "#/components/schemas/Score"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
